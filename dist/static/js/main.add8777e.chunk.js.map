{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootreducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","attachAuthIsReady","useFirestoreForProfile","userProfile","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.add8777e.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signOut} from '../../store/actions/authActions' \n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    ) \n}\n\nconst mapDispatchtoProps =(dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchtoProps)(SignedInLinks)","export const signIn = (credentials ) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch( {type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type:'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email, newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Sign up</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    ) \n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\nconst Navbar = (props) => {\n    const {auth, profile} = props\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n                {links}\n            </div>\n        </nav>\n    ) \n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const {notifications} = props\n    return (\n        <div className=\"section\">\n            <div className=\"card z0depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return (\n                            <li key={item.id}>\n                                <span className=\"pink-text\">{item.user} </span>\n                                <span>{item.content}</span>\n                                <div className=\"grey-text note-date\">\n                                    {moment(item.time.toDate()).fromNow()}\n                                </div>\n                            </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    ) \n}\n\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>{project.content}</p>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    ) \n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            {\n                projects && projects.map(project => {\n                    return (\n                        <Link to={'/project/' + project.id} key={project.id}>\n                            <ProjectSummary project={project} />\n                        </Link>\n                    )\n                })\n            }\n        </div>\n    ) \n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose } from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render(){\n        const {projects, auth, notifications} = this.props\n        if (!auth.uid) {\n            return <Redirect to='/signin'/>\n        } else {\n            return (\n                <div className=\"dashboard container\">\n                    <div className=\"row\">\n                        <div className=\"col s12 m6\">\n                            <ProjectList projects={projects}/>\n                        </div>\n                        <div className=\"col s12 m5 offset-m1\">\n                            <Notifications notifications={notifications}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        \n    }\n}\n\nconst mapStateToProps =(state) => {\n    console.log(state)\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{ collection: 'projects', orderBy: ['createdAt', 'desc']}, { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}]))(Dashboard)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose } from 'redux'\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const {project, auth} = props\n    if (!auth.uid) {\n        return <Redirect to='/signin'/>\n    }\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                    </div>\n                </div>\n            \n            </div>\n      )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project ...</p>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{collection: 'projects'}]))(ProjectDetails)","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email:'',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n\n  render() {\n      const {authError, auth} = this.props\n    if (auth.uid) {\n        return <Redirect to='/'/>\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                <div className=\"red-text center\">{authError ? <p>{authError}</p> : null}</div>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signUp} from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email:'',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(this.state)\n        this.props.signUp(this.state)\n    }\n\n  render() {\n    const { auth, authError} = this.props\n    if (auth.uid) {\n        return <Redirect to='/'/>\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"lastName\">LastName</label>\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"firstName\">FirstName</label>\n                <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                <div className=\"red-text center\">{authError ? <p>{authError}</p> : null}</div>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport {createProject} from '../../store/actions/projectActions'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n  render() {\n    const { auth} = this.props\n    if (!auth.uid) {\n        return <Redirect to='/signin'/>\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Create new porject</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"content\">Content</label>\n                <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Create Project</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps =(state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\n        const firestore = getFirestore()\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT',\n                project\n            })\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        })\n        \n    }\n} ","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state\n        case 'SIGNUP_ERROR':\n            console.log('signup failed', action.err)\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null,\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: 'titre 1', content: 'content1'},\n        {id: '2', title: 'titre 2', content: 'content2'},\n        {id: '3', title: 'titre 3', content: 'content3'},\n        {id: '4', title: 'titre 4', content: 'content4'},\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created projet', action.project)\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport { firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\nconst rootreducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootreducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyDfDGJbIwl-_C8rA32gMDnePj4b-KsBaDU\",\n    authDomain: \"tuto-marioplan-3628a.firebaseapp.com\",\n    databaseURL: \"https://tuto-marioplan-3628a.firebaseio.com\",\n    projectId: \"tuto-marioplan-3628a\",\n    storageBucket: \"tuto-marioplan-3628a.appspot.com\",\n    messagingSenderId: \"929148821089\"\n  };\n\n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots: true})\n\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {attachAuthIsReady: true, useFirestoreForProfile: true, userProfile: 'users'}),\n    )\n);\n    \nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store} ><App/></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n\n})\n "],"sourceRoot":""}